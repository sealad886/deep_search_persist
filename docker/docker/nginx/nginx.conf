# uWSGI serves the static files and in settings.yml we use::
#
#   ui:
#     static_use_hash: true

user nginx;  # User under which Nginx processes will run
worker_processes auto;  # Number of worker processes

# Error log configuration
error_log /var/log/nginx/error.log notice;  # Path and level for error logs
# Pid file configuration
pid /var/run/nginx.pid; # Path to the process ID file

# Event module settings
events {
    worker_connections 1024;  # Maximum number of connections per worker process
}

# Http module settings
http {
    # Default MIME types
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # Performance and protocol optimizations
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    server_names_hash_bucket_size 64;
    large_client_header_buffers 6 32k;
    client_max_body_size 100m;

    # Proxy timeouts
    proxy_connect_timeout 60s;
    proxy_send_timeout    60s;
    proxy_read_timeout    60s;

    # Proxy buffering settings
    proxy_buffer_size           4k;
    proxy_buffers               8 4k;
    proxy_busy_buffers_size     8k;
    proxy_temp_file_write_size  16k;
    proxy_max_temp_file_size    1m;

    # Log format
    log_format main '$remote_addr - $remote_user [$time_local] "$request_method $request_uri $http_version" $status $body_bytes_sent $http_referer "$http_user_agent"';

    # Access log configuration
    access_log /var/log/nginx/access.log main;

    # Server block for SearxNG
    server {
        listen 80;
        server_name localhost; # Replace with your actual domain or localhost for development

        location / {
            proxy_pass http://searxng-persist:8080; # Proxy to the SearxNG service
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_http_version 1.1; # Recommended for keep-alive connections with backend
            proxy_set_header Upgrade $http_upgrade; # For WebSocket support if SearxNG uses it
            proxy_set_header Connection "upgrade"; # For WebSocket support
            proxy_buffering off;
        }
    }

    # Default server to catch unhandled requests or serve a default page
    server {
      listen 80 default_server;
      listen [::]:80 default_server;
      root /var/www/html;
      index index.html index.htm;
      server_name _;

      location / {
        try_files $uri $uri/ =404; # Serve files, directories, or 404
      }
    }
}
